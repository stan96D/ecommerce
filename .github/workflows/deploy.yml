name: CI/CD for Django Application

on:
  push:
    branches:
      - dev
  workflow_dispatch: # Allows manual triggering for testing

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Print Environment Variables
      run: |
        echo "SERVER_USER=${{ secrets.SERVER_USER }}"
        echo "SERVER_IP=${{ secrets.SERVER_IP }}"
        echo "REPO_PATH=${{ secrets.REPO_PATH }}"
        # Print SSH_PRIVATE_KEY only in a secure manner (not recommended in production)
        echo "SSH_PRIVATE_KEY=${{ secrets.DEPLOY_KEY_GITHUB_ACTIONS }}"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY_GITHUB_ACTIONS }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        REPO_PATH: ${{ secrets.REPO_PATH }}

    - name: Deploy to Server
      run: |
        # Create a temporary SSH key file
        echo "${{ secrets.DEPLOY_KEY_GITHUB_ACTIONS }}" > /tmp/private_key
        chmod 600 /tmp/private_key

        # Execute the deployment commands over SSH
        ssh -i /tmp/private_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          echo "Successfully logged in"
          cd ${{ secrets.REPO_PATH }}
          git pull origin dev
          source /path/to/venv/bin/activate
          pip install -r requirements.txt
          sudo systemctl restart your-django-service
        EOF

        # Clean up
        rm /tmp/private_key
